************Basic Commands*********
source venv/bin/activate   to activate
deactivate                 to deactivate
sudo rm -r ./venv          to delete folder venv with root owner


************Guidelines**************
python3 -m venv venv        to create venv
source venv/bin/activate    to activate venv
pip install django          to install django
django-admin startproject core .    to create project as core
python3 manage.py startapp store    to create app as store
go to core > setting.py add "store" into INSTALLED_APPS = []
go to store/models.py add model for tables in database
python3 manage.py makemigrations to create db.sqlite3 which defined in store/models.py
python3 manage.py migrate to build model in database
create "media" folder
go to core/setting.py add   MEDIA_URL = '/media/'                         
                            MEDIA_ROOT = os.path.join(BASE_DIR,'media/')      
                            this is to configure 'image/' in core/setting.py into media folder
go to core/urls.py add      if settings.DEBUG:
                                urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
                            this is to show bug 
go to store/admin.py create class CatagoryAdmin, ProductAdmin
python3 manage.py createsuperuser   to create admin with username = admin and password = 1234
python3 manage.py runserver



go to core/url.py to add   path('', include('store.urls', namespace='store')), to link to store/urls.py
create store/urls.py file

go to store/urls.py add     from . import views
                            app_name = 'store'
                            urlpatterns=[path('', views.all_products, name='all_products'),]

go to store/views  to define def all_products
create templates folder > store folder > home.html file
go to core/settings.py > TEMPLATES = [...]  add 'DIRS': [BASE_DIR / 'templates'],
in html file div tag with class="container-fluid" mean the container will be be width



                            